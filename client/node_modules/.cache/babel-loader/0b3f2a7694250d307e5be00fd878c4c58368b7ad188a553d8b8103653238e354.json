{"ast":null,"code":"// import React, { useContext, useState } from 'react';\n// import { AppBarContainer, DrawerCloseButton } from '.';\n// import { Box, } from '@mui/material';\n// import Divider from '@mui/material/Divider';\n// import Drawer from '@mui/material/Drawer';\n// import IconButton from '@mui/material/IconButton';\n// import List from '@mui/material/List';\n// import ListItemText from '@mui/material/ListItemText';\n// import ListItemButton from '@mui/material/ListItemButton';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import { NavLink, useNavigate } from 'react-router-dom'\n// import { AppBarHeader, MyList, AdminAppBarContainer } from '.';\n// import SearchIcon from '@mui/icons-material/Search';\n// // import Action from './Action'\n// import CloseIcon from '@mui/icons-material/Close';\n// // import { GlobalState } from '../../GlobalContext';\n// import axios from 'axios'\n// import { toast } from 'react-toastify';\n// import Button from '@mui/material/Button';\n// import Menu from '@mui/material/Menu';\n// import MenuItem from '@mui/material/MenuItem';\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n// import DashboardIcon from '@mui/icons-material/Dashboard';\n// import LogoutIcon from '@mui/icons-material/Logout';\n// import CachedIcon from '@mui/icons-material/Cached';\n// import GroupIcon from '@mui/icons-material/Group';\n// import AccountCircleIcon from '@mui/icons-material/AccountCircle';\n// import ListAltIcon from '@mui/icons-material/ListAlt';\n// import Link from '@mui/material/Link';\n// import { Colors } from '../theme';\n// import FoodBankOutlinedIcon from '@mui/icons-material/FoodBankOutlined';\n\n// function AppBarMobile({ matches }) {\n\n//     const context = useContext(GlobalState)\n//     const [isLogged, setIsLogged] = context.authApi.isLogged;\n//     const [isAdmin, setIsAdmin] = context.authApi.isAdmin;\n//     const [isUser, setIsUser] = context.authApi.isUser;\n//     const [anchorEl, setAnchorEl] = useState(null);\n\n//     const navigate = useNavigate();\n\n//     const { setShowSearchBar } = context\n\n//     const [drawerOpen, setDrawerOpen] = useState(false);\n\n//     const handleDrawerToggle = () => {\n//         setDrawerOpen(!drawerOpen);\n//     };\n\n//     const drawerClose = () => {\n//         setDrawerOpen(false)\n//     }\n\n//     const AppMobileDrawer = (\n//         <Box component=\"div\">\n//             <List>\n//                 <ListItemButton onClick={drawerClose}>\n//                     <ListItemText ><NavLink to={\"/home\"} style={{ color: \"white\", textDecoration: \"none\" }}>Home</NavLink></ListItemText>\n//                 </ListItemButton >\n//                 <Divider variant='middle' />\n//                 <ListItemButton onClick={drawerClose}>\n//                     <ListItemText><NavLink to={\"/about\"} style={{ color: \"white\", textDecoration: \"none\" }}>About</NavLink></ListItemText>\n//                 </ListItemButton>\n//                 <Divider variant='middle' />\n//                 <ListItemButton onClick={drawerClose}>\n//                     <ListItemText><NavLink to={\"/menulist\"} style={{ color: \"white\", textDecoration: \"none\" }}>Menu</NavLink></ListItemText>\n//                 </ListItemButton>\n//                 <Divider variant='middle' />\n//                 <ListItemButton onClick={drawerClose}>\n//                     <ListItemText><NavLink to={\"/login\"} style={{ color: \"white\", textDecoration: \"none\" }}>Login</NavLink></ListItemText>\n//                 </ListItemButton>\n//                 <Divider variant='middle' />\n//                 <ListItemButton onClick={drawerClose}>\n//                     <ListItemText><NavLink to={\"/signup\"} style={{ color: \"white\", textDecoration: \"none\" }}>SignUp</NavLink></ListItemText>\n//                 </ListItemButton>\n//             </List>\n//         </Box>\n//     )\n//     const logoutUser = async () => {\n//         if (window.confirm(`Are you sure to logout`)) {\n//             await axios.get(`/api/v1/auth/logout`);\n//             localStorage.clear();\n//             if (isAdmin) {\n//                 setIsAdmin(false);\n//             }\n//             if (isUser) {\n//                 setIsUser(false);\n//             }\n//             setIsLogged(false);\n//             toast.success('Successfully Logout')\n//             navigate('/')\n//         } else {\n//             toast.warning('logout terminated')\n//         }\n//     }\n\n//     const dashNavigate = () => {\n//         navigate('/admin/dashboard')\n//     }\n\n//     const commonRoute = (props) => {\n\n//         const open = Boolean(anchorEl);\n//         const handleClick = (event) => {\n//             setAnchorEl(event.currentTarget);\n//         };\n//         const handleClose = () => {\n//             setAnchorEl(null);\n//         };\n\n//         return (\n//             <AdminAppBarContainer>\n//                 <AppBarHeader>\n//                     <Link href=\"home\">\n//                         <IconButton\n//                             sx={{ display: { xs: \"block\", sm: 'block', md: \"block\" } }}\n//                         >\n//                             <FoodBankOutlinedIcon\n//                                 sx={{ color: \"#fa7e1e\", fontSize: \"30px\" }}\n//                             />\n//                         </IconButton>\n//                     </Link>\n//                     <Link href=\"home\" sx={{ textDecoration: \"none\", color: Colors.secondary, fontSize: \"20px\", marginY: \"auto\" }}>Food-Bang</Link>\n//                 </AppBarHeader>\n//                 <Box>\n//                     <MyList type=\"row\">\n//                         <NavLink to={\"/home\"} className=\"ModNav\">Home</NavLink>\n//                         <Button\n//                             id=\"basic-button\"\n//                             onClick={handleClick}\n//                             endIcon={<KeyboardArrowDownIcon />}\n//                             sx={{ marginRight: isUser ? \"0px\" : \"0px\", fontSize: 20, marginTop: \"5px\", textTransform: \"capitalize\" }}\n//                         >\n//                             Accounts\n//                         </Button>\n//                         <Menu\n//                             id=\"basic-menu\"\n//                             anchorEl={anchorEl}\n//                             open={open}\n//                             onClose={handleClose}\n//                         >\n\n//                             {/* {\n//                                     isUser ? <Button size='small' startIcon={<DashboardIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}><NavLink to={`/user/dashboard`} style={{ textDecoration: \"none\", textTransform: \"capitalize\", fontSize: \"15px\", color: \"black\", fontWeight: \"bold\" }}>UserDashboard</NavLink></Button> : null\n//                                 } */}\n//                             {/* {\n//                                     isAdmin ? <Button size='small' startIcon={<DashboardIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}><NavLink to={`/admin/dashboard`} style={{ textDecoration: \"none\", textTransform: \"capitalize\", fontSize: \"15px\", color: \"black\", fontWeight: \"bold\" }}>AdminDashboard</NavLink></Button> : null\n//                                 } */}\n//                             {\n//                                 isAdmin ?\n//                                     <NavLink to={`/admin/dashboard`} style={{ textDecoration: \"none\" }}>\n//                                         <MenuItem onClick={handleClose} color=\"error\">\n//                                             <Button size='medium' startIcon={<DashboardIcon sx={{ color: Colors.secondary, fontSize: \"25px\" }} />} sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }}>AdminDashboard</Button>\n//                                         </MenuItem></NavLink> : null\n//                             }\n\n//                             <NavLink to={`/profile`} style={{ textDecoration: \"none\" }}>\n//                                 <MenuItem onClick={handleClose}>\n//                                     <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<AccountCircleIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Profile</Button>\n//                                 </MenuItem>\n//                             </NavLink>\n\n//                             <NavLink to={`/products`} style={{ textDecoration: \"none\" }}>\n//                                 <MenuItem onClick={handleClose}><Button sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} size='small' startIcon={<ListAltIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Menu</Button></MenuItem>\n//                             </NavLink>\n\n//                             {\n//                                 isAdmin ? (\n//                                     <NavLink to={`/users`} style={{ textDecoration: \"none\" }}>\n//                                         <MenuItem onClick={handleClose}>\n//                                             <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<GroupIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Users</Button>\n//                                         </MenuItem>\n//                                     </NavLink>) : null\n//                             }\n\n//                             <NavLink to={`/orders`} style={{ textDecoration: \"none\" }}>\n//                                 <MenuItem onClick={handleClose}>\n//                                     <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<CachedIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Orders</Button>\n//                                 </MenuItem></NavLink>\n\n//                             <NavLink to={`/`} onClick={logoutUser} style={{ textDecoration: \"none\" }}>\n//                                 <MenuItem onClick={handleClose}>\n//                                     <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<LogoutIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Logout</Button>\n//                                 </MenuItem>\n//                             </NavLink>\n//                         </Menu>\n//                         <Box>\n//                             {\n//                                 isAdmin ? null : <Action matches={matches} />\n//                             }\n//                         </Box>\n//                     </MyList>\n//                 </Box>\n//             </AdminAppBarContainer >\n\n//         )\n//     }\n//     return (\n//         <>\n//             {\n//                 isLogged ? null : (drawerOpen && (<DrawerCloseButton onClick={() => setDrawerOpen(false)}><CloseIcon sx={{ fontSize: \"2.5rem\", color: \"white\" }} /></DrawerCloseButton>))\n//             }\n\n//             <AppBarContainer>\n//                 <IconButton\n//                     color=\"inherit\"\n//                     aria-label=\"open drawer\"\n//                     sx={{ display: { sm: 'block' } }}\n//                     onClick={handleDrawerToggle}\n//                 >\n//                     <MenuIcon sx={{ color: \"#fff\" }} />\n//                 </IconButton>\n//                 <AppBarHeader justifyContent=\"center\">\n//                     <NavLink to={\"/food-bang\"} className=\"MobileNav\" style={{ textDecoration: \"none\", color: \"#fa7e1e\", textAlign: \"center\" }}>Food-Bang</NavLink>\n//                 </AppBarHeader>\n\n//                 {\n//                     isLogged ? commonRoute() : (<IconButton onClick={() => setShowSearchBar(true)}>\n//                         <SearchIcon sx={{ color: \"#fff\", mr: 3 }} />\n//                     </IconButton>)\n//                 }\n\n//                 {\n//                     isAdmin ? null : <Action matches={matches} />\n//                 }\n\n//                 {\n//                     isLogged ? null : (<Drawer\n//                         variant=\"temporary\"\n//                         open={drawerOpen}\n//                         onClose={handleDrawerToggle}\n//                         ModalProps={{\n//                             keepMounted: true, // Better open performance on mobile.\n//                         }}\n//                     >\n//                         {AppMobileDrawer}\n//                     </Drawer>)\n//                 }\n//             </AppBarContainer>\n//         </>\n//     );\n// }\n\n// export default AppBarMobile;","map":{"version":3,"names":[],"sources":["D:/NoQa/client/src/components/styles/appbar/AppBarMobile.js"],"sourcesContent":["// import React, { useContext, useState } from 'react';\r\n// import { AppBarContainer, DrawerCloseButton } from '.';\r\n// import { Box, } from '@mui/material';\r\n// import Divider from '@mui/material/Divider';\r\n// import Drawer from '@mui/material/Drawer';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import List from '@mui/material/List';\r\n// import ListItemText from '@mui/material/ListItemText';\r\n// import ListItemButton from '@mui/material/ListItemButton';\r\n// import MenuIcon from '@mui/icons-material/Menu';\r\n// import { NavLink, useNavigate } from 'react-router-dom'\r\n// import { AppBarHeader, MyList, AdminAppBarContainer } from '.';\r\n// import SearchIcon from '@mui/icons-material/Search';\r\n// // import Action from './Action'\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n// // import { GlobalState } from '../../GlobalContext';\r\n// import axios from 'axios'\r\n// import { toast } from 'react-toastify';\r\n// import Button from '@mui/material/Button';\r\n// import Menu from '@mui/material/Menu';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n// import DashboardIcon from '@mui/icons-material/Dashboard';\r\n// import LogoutIcon from '@mui/icons-material/Logout';\r\n// import CachedIcon from '@mui/icons-material/Cached';\r\n// import GroupIcon from '@mui/icons-material/Group';\r\n// import AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n// import ListAltIcon from '@mui/icons-material/ListAlt';\r\n// import Link from '@mui/material/Link';\r\n// import { Colors } from '../theme';\r\n// import FoodBankOutlinedIcon from '@mui/icons-material/FoodBankOutlined';\r\n\r\n\r\n// function AppBarMobile({ matches }) {\r\n\r\n//     const context = useContext(GlobalState)\r\n//     const [isLogged, setIsLogged] = context.authApi.isLogged;\r\n//     const [isAdmin, setIsAdmin] = context.authApi.isAdmin;\r\n//     const [isUser, setIsUser] = context.authApi.isUser;\r\n//     const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const { setShowSearchBar } = context\r\n\r\n//     const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n//     const handleDrawerToggle = () => {\r\n//         setDrawerOpen(!drawerOpen);\r\n//     };\r\n\r\n//     const drawerClose = () => {\r\n//         setDrawerOpen(false)\r\n//     }\r\n\r\n//     const AppMobileDrawer = (\r\n//         <Box component=\"div\">\r\n//             <List>\r\n//                 <ListItemButton onClick={drawerClose}>\r\n//                     <ListItemText ><NavLink to={\"/home\"} style={{ color: \"white\", textDecoration: \"none\" }}>Home</NavLink></ListItemText>\r\n//                 </ListItemButton >\r\n//                 <Divider variant='middle' />\r\n//                 <ListItemButton onClick={drawerClose}>\r\n//                     <ListItemText><NavLink to={\"/about\"} style={{ color: \"white\", textDecoration: \"none\" }}>About</NavLink></ListItemText>\r\n//                 </ListItemButton>\r\n//                 <Divider variant='middle' />\r\n//                 <ListItemButton onClick={drawerClose}>\r\n//                     <ListItemText><NavLink to={\"/menulist\"} style={{ color: \"white\", textDecoration: \"none\" }}>Menu</NavLink></ListItemText>\r\n//                 </ListItemButton>\r\n//                 <Divider variant='middle' />\r\n//                 <ListItemButton onClick={drawerClose}>\r\n//                     <ListItemText><NavLink to={\"/login\"} style={{ color: \"white\", textDecoration: \"none\" }}>Login</NavLink></ListItemText>\r\n//                 </ListItemButton>\r\n//                 <Divider variant='middle' />\r\n//                 <ListItemButton onClick={drawerClose}>\r\n//                     <ListItemText><NavLink to={\"/signup\"} style={{ color: \"white\", textDecoration: \"none\" }}>SignUp</NavLink></ListItemText>\r\n//                 </ListItemButton>\r\n//             </List>\r\n//         </Box>\r\n//     )\r\n//     const logoutUser = async () => {\r\n//         if (window.confirm(`Are you sure to logout`)) {\r\n//             await axios.get(`/api/v1/auth/logout`);\r\n//             localStorage.clear();\r\n//             if (isAdmin) {\r\n//                 setIsAdmin(false);\r\n//             }\r\n//             if (isUser) {\r\n//                 setIsUser(false);\r\n//             }\r\n//             setIsLogged(false);\r\n//             toast.success('Successfully Logout')\r\n//             navigate('/')\r\n//         } else {\r\n//             toast.warning('logout terminated')\r\n//         }\r\n//     }\r\n\r\n//     const dashNavigate = () => {\r\n//         navigate('/admin/dashboard')\r\n//     }\r\n\r\n//     const commonRoute = (props) => {\r\n\r\n//         const open = Boolean(anchorEl);\r\n//         const handleClick = (event) => {\r\n//             setAnchorEl(event.currentTarget);\r\n//         };\r\n//         const handleClose = () => {\r\n//             setAnchorEl(null);\r\n//         };\r\n\r\n//         return (\r\n//             <AdminAppBarContainer>\r\n//                 <AppBarHeader>\r\n//                     <Link href=\"home\">\r\n//                         <IconButton\r\n//                             sx={{ display: { xs: \"block\", sm: 'block', md: \"block\" } }}\r\n//                         >\r\n//                             <FoodBankOutlinedIcon\r\n//                                 sx={{ color: \"#fa7e1e\", fontSize: \"30px\" }}\r\n//                             />\r\n//                         </IconButton>\r\n//                     </Link>\r\n//                     <Link href=\"home\" sx={{ textDecoration: \"none\", color: Colors.secondary, fontSize: \"20px\", marginY: \"auto\" }}>Food-Bang</Link>\r\n//                 </AppBarHeader>\r\n//                 <Box>\r\n//                     <MyList type=\"row\">\r\n//                         <NavLink to={\"/home\"} className=\"ModNav\">Home</NavLink>\r\n//                         <Button\r\n//                             id=\"basic-button\"\r\n//                             onClick={handleClick}\r\n//                             endIcon={<KeyboardArrowDownIcon />}\r\n//                             sx={{ marginRight: isUser ? \"0px\" : \"0px\", fontSize: 20, marginTop: \"5px\", textTransform: \"capitalize\" }}\r\n//                         >\r\n//                             Accounts\r\n//                         </Button>\r\n//                         <Menu\r\n//                             id=\"basic-menu\"\r\n//                             anchorEl={anchorEl}\r\n//                             open={open}\r\n//                             onClose={handleClose}\r\n//                         >\r\n\r\n//                             {/* {\r\n//                                     isUser ? <Button size='small' startIcon={<DashboardIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}><NavLink to={`/user/dashboard`} style={{ textDecoration: \"none\", textTransform: \"capitalize\", fontSize: \"15px\", color: \"black\", fontWeight: \"bold\" }}>UserDashboard</NavLink></Button> : null\r\n//                                 } */}\r\n//                             {/* {\r\n//                                     isAdmin ? <Button size='small' startIcon={<DashboardIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}><NavLink to={`/admin/dashboard`} style={{ textDecoration: \"none\", textTransform: \"capitalize\", fontSize: \"15px\", color: \"black\", fontWeight: \"bold\" }}>AdminDashboard</NavLink></Button> : null\r\n//                                 } */}\r\n//                             {\r\n//                                 isAdmin ?\r\n//                                     <NavLink to={`/admin/dashboard`} style={{ textDecoration: \"none\" }}>\r\n//                                         <MenuItem onClick={handleClose} color=\"error\">\r\n//                                             <Button size='medium' startIcon={<DashboardIcon sx={{ color: Colors.secondary, fontSize: \"25px\" }} />} sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }}>AdminDashboard</Button>\r\n//                                         </MenuItem></NavLink> : null\r\n//                             }\r\n\r\n//                             <NavLink to={`/profile`} style={{ textDecoration: \"none\" }}>\r\n//                                 <MenuItem onClick={handleClose}>\r\n//                                     <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<AccountCircleIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Profile</Button>\r\n//                                 </MenuItem>\r\n//                             </NavLink>\r\n\r\n//                             <NavLink to={`/products`} style={{ textDecoration: \"none\" }}>\r\n//                                 <MenuItem onClick={handleClose}><Button sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} size='small' startIcon={<ListAltIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Menu</Button></MenuItem>\r\n//                             </NavLink>\r\n\r\n//                             {\r\n//                                 isAdmin ? (\r\n//                                     <NavLink to={`/users`} style={{ textDecoration: \"none\" }}>\r\n//                                         <MenuItem onClick={handleClose}>\r\n//                                             <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<GroupIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Users</Button>\r\n//                                         </MenuItem>\r\n//                                     </NavLink>) : null\r\n//                             }\r\n\r\n//                             <NavLink to={`/orders`} style={{ textDecoration: \"none\" }}>\r\n//                                 <MenuItem onClick={handleClose}>\r\n//                                     <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<CachedIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Orders</Button>\r\n//                                 </MenuItem></NavLink>\r\n\r\n//                             <NavLink to={`/`} onClick={logoutUser} style={{ textDecoration: \"none\" }}>\r\n//                                 <MenuItem onClick={handleClose}>\r\n//                                     <Button size='small' sx={{ color: \"black\", textTransform: \"capitalize\", my: 'auto', fontSize: \"15px\", fontWeight: \"bold\" }} startIcon={<LogoutIcon style={{ color: Colors.secondary, fontSize: \"25px\" }} />}>Logout</Button>\r\n//                                 </MenuItem>\r\n//                             </NavLink>\r\n//                         </Menu>\r\n//                         <Box>\r\n//                             {\r\n//                                 isAdmin ? null : <Action matches={matches} />\r\n//                             }\r\n//                         </Box>\r\n//                     </MyList>\r\n//                 </Box>\r\n//             </AdminAppBarContainer >\r\n\r\n//         )\r\n//     }\r\n//     return (\r\n//         <>\r\n//             {\r\n//                 isLogged ? null : (drawerOpen && (<DrawerCloseButton onClick={() => setDrawerOpen(false)}><CloseIcon sx={{ fontSize: \"2.5rem\", color: \"white\" }} /></DrawerCloseButton>))\r\n//             }\r\n\r\n//             <AppBarContainer>\r\n//                 <IconButton\r\n//                     color=\"inherit\"\r\n//                     aria-label=\"open drawer\"\r\n//                     sx={{ display: { sm: 'block' } }}\r\n//                     onClick={handleDrawerToggle}\r\n//                 >\r\n//                     <MenuIcon sx={{ color: \"#fff\" }} />\r\n//                 </IconButton>\r\n//                 <AppBarHeader justifyContent=\"center\">\r\n//                     <NavLink to={\"/food-bang\"} className=\"MobileNav\" style={{ textDecoration: \"none\", color: \"#fa7e1e\", textAlign: \"center\" }}>Food-Bang</NavLink>\r\n//                 </AppBarHeader>\r\n\r\n//                 {\r\n//                     isLogged ? commonRoute() : (<IconButton onClick={() => setShowSearchBar(true)}>\r\n//                         <SearchIcon sx={{ color: \"#fff\", mr: 3 }} />\r\n//                     </IconButton>)\r\n//                 }\r\n\r\n\r\n//                 {\r\n//                     isAdmin ? null : <Action matches={matches} />\r\n//                 }\r\n\r\n//                 {\r\n//                     isLogged ? null : (<Drawer\r\n//                         variant=\"temporary\"\r\n//                         open={drawerOpen}\r\n//                         onClose={handleDrawerToggle}\r\n//                         ModalProps={{\r\n//                             keepMounted: true, // Better open performance on mobile.\r\n//                         }}\r\n//                     >\r\n//                         {AppMobileDrawer}\r\n//                     </Drawer>)\r\n//                 }\r\n//             </AppBarContainer>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n// export default AppBarMobile;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA"},"metadata":{},"sourceType":"module","externalDependencies":[]}